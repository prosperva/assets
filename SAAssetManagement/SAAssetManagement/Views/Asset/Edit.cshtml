@model SAAssetManagement.Models.Asset

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="span8">
        <h2>Editing @Model.AssetTag</h2>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>

        @Html.HiddenFor(model => model.AssetID)

        <div class="tabbable">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab1" data-toggle="tab">Ownership Information</a></li>
                <li><a href="#tab2" data-toggle="tab">Location Information</a></li>
                <li><a href="#tab3" data-toggle="tab">Procurement Information</a></li>
                <li><a href="#tab4" data-toggle="tab">Warranty Information</a></li>
                 @if (@Model.AssetTypeID == 1)
                 {
                        <li><a href="#tab5" data-toggle="tab">Software Information</a></li>
                 }
                <li><a href="#tab6" data-toggle="tab">History Information</a></li>
                <li><a href="#tab7" data-toggle="tab">Other Information</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tab1">
                <div class="editor-label">
            @Html.LabelFor(model => model.DivisionID)
        </div>

        <div class="editor-field">
            <select id="divisionid" name="divisionid"></select>
            @Html.ValidationMessageFor(model => model.DivisionID)
        </div>
      
        <div class="editor-label">
            @Html.LabelFor(model => model.BranchID)
        </div>
        <div class="editor-field">
            <select id="branchid" name="branchid"></select>
            @Html.ValidationMessageFor(model => model.BranchID)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeID, "Employee")
        </div>
        <div class="editor-field">
            @*@Html.DropDownList("EmployeeID", null, new { @class = "chzn-select" })*@
            @Html.DropDownList("EmployeeID", String.Empty)
            @Html.ValidationMessageFor(model => model.EmployeeID)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.AssetTypeID, "Asset Type")
        </div>
        <div class="editor-field">
            @Html.DropDownList("AssetTypeID", String.Empty)
            @Html.ValidationMessageFor(model => model.AssetTypeID)
        </div>
        <div id="dynamicForm">
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AssetTag)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AssetTag)
            @Html.ValidationMessageFor(model => model.AssetTag)
        </div>
        </div>
        
        <div class="tab-pane" id="tab2">
        <div class="editor-label">
            @Html.LabelFor(model => model.BuildingID, "Building")
        </div>
        <div class="editor-field">
            @Html.DropDownList("BuildingID", String.Empty)
            @Html.ValidationMessageFor(model => model.BuildingID)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Floor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Floor)
            @Html.ValidationMessageFor(model => model.Floor)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ComputerLocation)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.ComputerLocation, new { @cols = "50", @rows = "5" })
            @Html.ValidationMessageFor(model => model.ComputerLocation)
        </div>

       </div>
       
       <div class="tab-pane" id="tab3">
           <div class="editor-label">
                @Html.LabelFor(model => model.PONumber)
           </div>
           <div class="editor-field">
                @Html.EditorFor(model => model.PONumber)
                @Html.ValidationMessageFor(model => model.PONumber)
           </div>
       </div>
       <div class="tab-pane" id="tab4">
       <div class="editor-label">
            @Html.LabelFor(model => model.ReceivedDate)
        </div>

        
        <div id="ReceivedDate" name="ReceivedDate" class="input-append date">
            <input data-format="yyyy-MM-dd hh:mm:ss" name="ReceivedDate" value="@Html.Raw(@Model.ReceivedDate)" type="text"></input>
            <span class="add-on">
                <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
            </span>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DeployedDate)
        </div>
       

        <div id="DeployedDate" name="DeployedDate" class="input-append date">
            <input data-format="dd/MM/yyyy hh:mm:ss" name="DeployedDate" value="@Html.Raw(@Model.DeployedDate)" type="text"></input>
            <span class="add-on">
                <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
            </span>
        </div>
        </div>
                
        @if (@Model.AssetTypeID == 1)
        {
                <div class="tab-pane" id="tab5">
                                      
                </div>
        }

        <div class="tab-pane" id="tab6">
            <div class="editor-label">
                @Html.LabelFor(model => model.CreatedOn)
            </div>

            <div id="CreatedOn" name="CreatedOn" class="input-append date">
                <input data-format="dd/MM/yyyy hh:mm:ss" name="CreatedOn" value="@Html.Raw(@Model.CreatedOn)" type="text"></input>
                <span class="add-on">
                    <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
                </span>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.LastUpdatedOn)
            </div>
        
             <div id="LastUpdatedOn" name="LastUpdatedOn" class="input-append date">
                <input data-format="dd/MM/yyyy hh:mm:ss" name="LastUpdatedOn" value="@Html.Raw(@Model.LastUpdatedOn)" type="text"></input>
                <span class="add-on">
                    <i data-time-icon="icon-time" data-date-icon="icon-calendar"></i>
                </span>
            </div>
        </div>

        <div class="tab-pane" id="tab7">
            <div class="editor-label">
                @Html.LabelFor(model => model.SerialNumber)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SerialNumber)
                @Html.ValidationMessageFor(model => model.SerialNumber)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.PartNumber)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PartNumber)
                @Html.ValidationMessageFor(model => model.PartNumber)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.MakeModel)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MakeModel)
                @Html.ValidationMessageFor(model => model.MakeModel)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.AssetStatusID, "Asset Status")
            </div>
            <div class="editor-field">
                @Html.DropDownList("AssetStatusID", String.Empty)
                @Html.ValidationMessageFor(model => model.AssetStatusID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.AssetTypeID, "Asset Type")
            </div>
            <div class="editor-field">
                @Html.DropDownList("AssetTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.AssetTypeID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.WorkStationTypeID, "WorkStation Type")
            </div>
            <div class="editor-field">
                @Html.DropDownList("WorkStationTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.WorkStationTypeID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.OSSystemID, "OS System")
            </div>
            <div class="editor-field">
                @Html.DropDownList("OSSystemID", String.Empty)
                @Html.ValidationMessageFor(model => model.OSSystemID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Notes)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Notes)
                @Html.ValidationMessageFor(model => model.Notes)
            </div>
                    </div>
                </div>
            </div>
   
            <input type="submit" value="Save" />
    </fieldset>
}

<div>
    <a href="/Asset/">Back to list</a>
</div>

@section Scripts {

@Scripts.Render("~/bundles/jqueryval")

  

<script type="text/javascript">
    $(document).ready(function () {

            //Date picker
            
            $('#ReceivedDate,#DeployedDate,#CreatedOn,#LastUpdatedOn').datetimepicker({});

        });
    </script>
}